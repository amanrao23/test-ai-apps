name: AI Gallery Update Template CI
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'website/static/templates.json'

jobs:
  validation:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install AZD
        uses: Azure/setup-azd@v1.0.0

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Parse PR comment
        id: parse_pr_commentbody
        uses: actions/github-script@v6
        with:
          script: |
            const body = context.payload.pull_request.body;
            const regex = /Place your template repository link here:\s*(https:\/\/github\.com\/[^\s]+)/;
            const match = body.match(regex);
            if (match && match[1]) {
              core.setOutput("extracted_link", match[1]);
            } else {
              core.setFailed("No match found in PR body.");
            }

      - name: Print parse_pr_commentbody
        run: echo ${{ steps.parse_pr_commentbody.outputs.extracted_link }}

      - id: validation
        uses: microsoft/template-validation-action@main
        with:
          repositoryURL: ${{ steps.parse_pr_commentbody.outputs.extracted_link }}
          branch: main

      - name: Read file content
        if: always()
        id: read_validation_result
        run: |
          FILE_CONTENT=$(cat {{ steps.validation.outputs.resultFile }})
          echo "validation_result<<EOF" >> $GITHUB_ENV
          echo "$FILE_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post comment on PR
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ env.validation_result }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "${{ env.COMMENT_BODY }}"