name: Release AI Apps

# This pipeline is manually started only as part of releasing AI Apps
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  
jobs:
  deploy:
    name: Deploy Site To GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: website/package-lock.json
      - name: Build website
        working-directory: website
        run: |
          npm ci
          npm run build
      
      # artifact for mirror deploy
      - name: Zip artifact for deployment
        working-directory: website/build
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: mirror-app
          path: website/build/release.zip          

      # Popular action to deploy to GitHub Pages:
      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Build output to publish to the `gh-pages` branch:
          publish_dir: ./website/build
          # Assign commit authorship to the official GH-Actions bot for deploys to `gh-pages` branch:
          # https://github.com/actions/checkout/issues/13#issuecomment-724415212
          # The GH actions bot is used by default if you didn't specify the two fields.
          # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
  
  mirror-deploy:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: mirror-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_AB8B315B72F44C7297026288DC24F28D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_56033D16481043BFB8C35158354C76BA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_06327AA519C44714B8B1E8B61FBE61CB }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ai-apps-mirror'
          slot-name: 'Production'
          package: .
          